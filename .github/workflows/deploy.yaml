name: Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # ## podemos usar servicios a nivel contenedor, como docker para emplear o utilizar servicos de mysql docker, etc. en este ejemplo ya estamos instalando redis en el contendores y podemos contectar con los steps.
      # ## si queremos usar redis, como se istalar en el workflow es decir una maquina virtual, podemos usarla desde localhost. NO ES COMO EN DOCKER COMPUSE QUE PUEDES HACER USO CON SU NOMBRE O ID, SINO COMO SI LO ESTUVIERAS USANDO EN TU MAQUINA LOCAL.
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Print Variable
        ## github action al ver que es un secret no lo imprime sino que hace echo de *** por proteccion. Lar variables de entorno si las puedes mostra.
        run: echo ${{ secrets.NAME }}

      - name: intstall redis cli
        ## hay que usar sudo por tema de permisos sino dara error, y el flag  -y significa yes y eso es porque al usar sudo te pide confirmacion yes or not para instalar y atyalizar etonces se le pasa el flag -y de forma automatica.
        run: sudo apt-get update -y &&  sudo apt-get install redis-tools -y

      - name: Test redis-tools
        ## aqui validamos que redis cli se instalo corretamente, ademas accedemos al redis con localhots y el puerto especificado. El ping es algo de redis que cuando se instala y se verifica que existe rsponde con PONG el ping.
        run: redis-cli -h localhost -p 6379 ping

      - name: setup
        ## usando un action de github para instalar node y otras dependencias basicas de node ya que este proyecto necesuta node.
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Checkout (Para utilizar nustro repositorio, sino todo lo demas dara error)
        uses: actions/checkout@v4

      - name: Instalar dependencias
        run: npm install

      - name: Run Test!!
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deplying
        run: echo "Deploying ..."
